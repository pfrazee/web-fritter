{"version":3,"file":"random-access-idb-mutable-file.js","sources":["../node_modules/inherits/inherits_browser.js","../node_modules/random-access-storage/index.js","../src/IndexedDB.js","../src/random-access-idb-mutable-file.js"],"sourcesContent":["if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","var events = require('events')\nvar inherits = require('inherits')\n\nvar NOT_READABLE = defaultImpl(new Error('Not readable'))\nvar NOT_WRITABLE = defaultImpl(new Error('Not writable'))\nvar NOT_DELETABLE = defaultImpl(new Error('Not deletable'))\nvar NOT_STATABLE = defaultImpl(new Error('Not statable'))\nvar NO_OPEN_READABLE = defaultImpl(new Error('No readonly open'))\n\nmodule.exports = RandomAccess\n\nfunction RandomAccess (opts) {\n  if (!(this instanceof RandomAccess)) return new RandomAccess(opts)\n  events.EventEmitter.call(this)\n\n  this._queued = []\n  this._pending = 0\n  this._needsOpen = true\n\n  this.opened = false\n  this.closed = false\n  this.destroyed = false\n\n  if (opts) {\n    if (opts.openReadonly) this._openReadonly = opts.openReadonly\n    if (opts.open) this._open = opts.open\n    if (opts.read) this._read = opts.read\n    if (opts.write) this._write = opts.write\n    if (opts.del) this._del = opts.del\n    if (opts.stat) this._stat = opts.stat\n    if (opts.close) this._close = opts.close\n    if (opts.destroy) this._destroy = opts.destroy\n  }\n\n  this.preferReadonly = this._openReadonly !== NO_OPEN_READABLE\n  this.readable = this._read !== NOT_READABLE\n  this.writable = this._write !== NOT_WRITABLE\n  this.deletable = this._del !== NOT_DELETABLE\n  this.statable = this._stat !== NOT_STATABLE\n}\n\ninherits(RandomAccess, events.EventEmitter)\n\nRandomAccess.prototype.open = function (cb) {\n  if (!cb) cb = noop\n  if (this.opened && !this._needsOpen) return process.nextTick(cb, null)\n  queueAndRun(this, new Request(this, 0, 0, 0, null, cb))\n}\n\nRandomAccess.prototype._open = defaultImpl(null)\nRandomAccess.prototype._openReadonly = NO_OPEN_READABLE\n\nRandomAccess.prototype.read = function (offset, size, cb) {\n  this.run(new Request(this, 1, offset, size, null, cb))\n}\n\nRandomAccess.prototype._read = NOT_READABLE\n\nRandomAccess.prototype.write = function (offset, data, cb) {\n  if (!cb) cb = noop\n  openWritable(this)\n  this.run(new Request(this, 2, offset, data.length, data, cb))\n}\n\nRandomAccess.prototype._write = NOT_WRITABLE\n\nRandomAccess.prototype.del = function (offset, size, cb) {\n  if (!cb) cb = noop\n  openWritable(this)\n  this.run(new Request(this, 3, offset, size, null, cb))\n}\n\nRandomAccess.prototype._del = NOT_DELETABLE\n\nRandomAccess.prototype.stat = function (cb) {\n  this.run(new Request(this, 4, 0, 0, null, cb))\n}\n\nRandomAccess.prototype._stat = NOT_STATABLE\n\nRandomAccess.prototype.close = function (cb) {\n  if (!cb) cb = noop\n  if (this.closed) return process.nextTick(cb, null)\n  queueAndRun(this, new Request(this, 5, 0, 0, null, cb))\n}\n\nRandomAccess.prototype._close = defaultImpl(null)\n\nRandomAccess.prototype.destroy = function (cb) {\n  if (!cb) cb = noop\n  if (!this.closed) this.close(noop)\n  queueAndRun(this, new Request(this, 6, 0, 0, null, cb))\n}\n\nRandomAccess.prototype._destroy = defaultImpl(null)\n\nRandomAccess.prototype.run = function (req) {\n  if (this._needsOpen) this.open(noop)\n  if (this._queued.length) this._queued.push(req)\n  else req._run()\n}\n\nfunction noop () {}\n\nfunction Request (self, type, offset, size, data, cb) {\n  this.type = type\n  this.offset = offset\n  this.data = data\n  this.size = size\n  this.storage = self\n\n  this._sync = false\n  this._callback = cb\n  this._openError = null\n}\n\nRequest.prototype._maybeOpenError = function (err) {\n  if (this.type !== 0) return\n  var queued = this.storage._queued\n  for (var i = 0; i < queued.length; i++) queued[i]._openError = err\n}\n\nRequest.prototype._unqueue = function (err) {\n  var ra = this.storage\n  var queued = ra._queued\n\n  if (!err) {\n    switch (this.type) {\n      case 0:\n        if (!ra.opened) {\n          ra.opened = true\n          ra.emit('open')\n        }\n        break\n\n      case 5:\n        if (!ra.closed) {\n          ra.closed = true\n          ra.emit('close')\n        }\n        break\n\n      case 6:\n        if (!ra.destroyed) {\n          ra.destroyed = true\n          ra.emit('destroy')\n        }\n        break\n    }\n  } else {\n    this._maybeOpenError(err)\n  }\n\n  if (queued.length && queued[0] === this) queued.shift()\n  if (!--ra._pending && queued.length) queued[0]._run()\n}\n\nRequest.prototype.callback = function (err, val) {\n  if (this._sync) return nextTick(this, err, val)\n  this._unqueue(err)\n  this._callback(err, val)\n}\n\nRequest.prototype._openAndNotClosed = function () {\n  var ra = this.storage\n  if (ra.opened && !ra.closed) return true\n  if (!ra.opened) nextTick(this, this._openError || new Error('Not opened'))\n  else if (ra.closed) nextTick(this, new Error('Closed'))\n  return false\n}\n\nRequest.prototype._open = function () {\n  var ra = this.storage\n\n  if (ra.opened && !ra._needsOpen) return nextTick(this, null)\n  if (ra.closed) return nextTick(this, new Error('Closed'))\n\n  ra._needsOpen = false\n  if (ra.preferReadonly) ra._openReadonly(this)\n  else ra._open(this)\n}\n\nRequest.prototype._run = function () {\n  var ra = this.storage\n  ra._pending++\n\n  this._sync = true\n\n  switch (this.type) {\n    case 0:\n      this._open()\n      break\n\n    case 1:\n      if (this._openAndNotClosed()) ra._read(this)\n      break\n\n    case 2:\n      if (this._openAndNotClosed()) ra._write(this)\n      break\n\n    case 3:\n      if (this._openAndNotClosed()) ra._del(this)\n      break\n\n    case 4:\n      if (this._openAndNotClosed()) ra._stat(this)\n      break\n\n    case 5:\n      if (ra.closed || !ra.opened) nextTick(this, null)\n      else ra._close(this)\n      break\n\n    case 6:\n      if (ra.destroyed) nextTick(this, null)\n      else ra._destroy(this)\n      break\n  }\n\n  this._sync = false\n}\n\nfunction queueAndRun (self, req) {\n  self._queued.push(req)\n  if (!self._pending) req._run()\n}\n\nfunction openWritable (self) {\n  if (self.preferReadonly) {\n    self._needsOpen = true\n    self.preferReadonly = false\n  }\n}\n\nfunction defaultImpl (err) {\n  return overridable\n\n  function overridable (req) {\n    nextTick(req, err)\n  }\n}\n\nfunction nextTick (req, err, val) {\n  process.nextTick(nextTickCallback, req, err, val)\n}\n\nfunction nextTickCallback (req, err, val) {\n  req.callback(err, val)\n}\n","// @flow strict\n\nexport interface OpenDBRequest {\n  result: IDBDatabase;\n  error: Error;\n  onupgradeneeded: $PropertyType<IDBOpenDBRequest, \"onupgradeneeded\">;\n  onerror: (err: any) => mixed;\n  onsuccess: (e: any) => mixed;\n}\n\nexport interface IDBFactory {\n  open(name: string, version?: number): IDBOpenDBRequest;\n  deleteDatabase(name: string): IDBOpenDBRequest;\n  cmp(a: any, b: any): -1 | 0 | 1;\n}\n\nexport interface IDBRequest<x, a> extends EventTarget {\n  result: a;\n  error: x;\n  source: ?(IDBIndex | IDBObjectStore<*, *> | IDBCursor);\n  transaction: IDBTransaction;\n  readyState: \"pending\" | \"done\";\n  onerror: (err: any) => mixed;\n  onsuccess: (e: any) => mixed;\n}\n\nexport interface IDBOpenDBRequest extends IDBRequest<Error, IDBDatabase> {\n  onblocked: (e: any) => mixed;\n  onupgradeneeded: (e: any) => mixed;\n}\n\nexport interface DOMStringList {\n  +length: number;\n  item(): string;\n  contains(string): boolean;\n}\n\nexport interface IDBDatabase extends EventTarget {\n  close(): void;\n  createObjectStore(\n    name: string,\n    options?: {\n      keyPath?: ?(string | string[]),\n      autoIncrement?: boolean\n    }\n  ): IDBObjectStore<*, *>;\n  deleteObjectStore(name: string): void;\n  createMutableFile(\n    name: string,\n    type: \"text\" | \"binary/random\"\n  ): IDBRequest<Error, IDBMutableFile>;\n  transaction(\n    storeNames: string | string[],\n    mode?: \"readonly\" | \"readwrite\" | \"versionchange\"\n  ): IDBTransaction;\n  name: string;\n  version: number;\n  objectStoreNames: DOMStringList;\n  onabort: (e: any) => mixed;\n  onclose: (e: any) => mixed;\n  onerror: (e: any) => mixed;\n  onversionchange: (e: any) => mixed;\n}\n\nexport interface IDBTransaction extends EventTarget {\n  abort(): void;\n  db: IDBDatabase;\n  error: Error;\n  mode: \"readonly\" | \"readwrite\" | \"versionchange\";\n  name: string;\n  objectStore(name: string): IDBObjectStore<*, *>;\n  onabort: (e: any) => mixed;\n  oncomplete: (e: any) => mixed;\n  onerror: (e: any) => mixed;\n}\n\nexport interface IDBIndexParameters {\n  unique?: boolean;\n  multiEntry?: boolean;\n  locale?: string;\n}\n\nexport interface IDBObjectStore<k, v> {\n  name: string;\n  keyPath: any;\n\n  +indexNames: string[];\n  +transaction: IDBTransaction;\n  +autoIncrement: boolean;\n\n  add(value: v): IDBRequest<Error, null>;\n  add(value: v, key: k): IDBRequest<Error, k>;\n  delete(key: k | IDBKeyRange): IDBRequest<Error, void>;\n  get(key: k | IDBKeyRange): IDBRequest<Error, v>;\n  getKey(key: k | IDBKeyRange): IDBRequest<Error, k>;\n  clear(): IDBRequest<Error, void>;\n\n  createIndex(\n    indexName: string,\n    keyPath: string | string[],\n    optionalParameter?: IDBIndexParameters\n  ): IDBIndex;\n  count(keyRange?: k | IDBKeyRange): IDBRequest<Error, number>;\n  deleteIndex(indexName: string): void;\n  index(indexName: string): IDBIndex;\n  openCursor(\n    range?: k | IDBKeyRange,\n    direction?: IDBDirection\n  ): IDBRequest<Error, IDBCursorWithValue>;\n  openKeyCursor(\n    range?: k | IDBKeyRange,\n    direction?: IDBDirection\n  ): IDBRequest<Error, IDBCursor>;\n  put(value: v, key: k): IDBRequest<Error, k>;\n}\n\nexport interface IDBMutableFile extends EventTarget {\n  +name: string;\n  +type: string;\n  +database: IDBDatabase;\n\n  onabort: ?EventHandler;\n  onerror: ?EventHandler;\n\n  open(mode?: \"readonly\" | \"readwrite\"): LockedFile;\n  getFile(): IDBRequest<Error, File>;\n}\n\nexport interface IDBFileMetadataParameters {\n  size?: boolean;\n  lastModified?: boolean;\n}\n\nexport type ArrayBufferView =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array\n  | DataView\n\nexport interface IDBFileHandle extends EventTarget {\n  +mutableFile: IDBMutableFile;\n  +fileHandle: IDBMutableFile;\n  +mode: \"readonly\" | \"readwrite\";\n  +active: boolean;\n\n  location: number;\n\n  getMetadata(): IDBRequest<Error, { size: number, lastModified: Date }>;\n  getMetadata({ size: true }): IDBRequest<Error, { size: number }>;\n  getMetadata({ lastModified: true }): IDBRequest<\n    Error,\n    { lastModified: Date }\n  >;\n  getMetadata({ lastModified: true, size: true }): IDBRequest<\n    Error,\n    { size: number, lastModified: Date }\n  >;\n\n  readAsArrayBuffer(size: number): IDBRequest<Error, ArrayBuffer>;\n  readAsText(size: number, encoding?: ?string): IDBRequest<Error, string>;\n  write(string | ArrayBuffer | ArrayBufferView | Blob): IDBRequest<Error, void>;\n  append(\n    string | ArrayBuffer | ArrayBufferView | Blob\n  ): IDBRequest<Error, void>;\n  truncate(size?: number): IDBRequest<Error, void>;\n  flush(): IDBRequest<Error, void>;\n  abort(): void;\n\n  oncomplete: ?EventHandler;\n  onabort: ?EventHandler;\n  onerror: ?EventHandler;\n}\n\nexport type LockedFile = IDBFileHandle\n\nexport const indexedDB: IDBFactory = window.indexedDB\n","// @flow strict\n\nimport RandomAccess from \"random-access-storage\"\nimport type {\n  Stat,\n  Request,\n  OpenRequest,\n  ReadRequest,\n  WriteRequest,\n  DeleteRequest,\n  StatRequest,\n  CloseRequest,\n  DestroyRequest\n} from \"random-access-storage\"\nimport { indexedDB } from \"./IndexedDB\"\nimport type {\n  IDBRequest,\n  IDBDatabase,\n  IDBObjectStore,\n  IDBMutableFile,\n  IDBFileHandle\n} from \"./IndexedDB\"\nimport { Buffer } from \"buffer\"\n\nconst promise = /*::<x, a>*/ (request /*:IDBRequest<x, a>*/) /*:Promise<a>*/ =>\n  new Promise((resolve, reject) => {\n    request.onsuccess = () => resolve(request.result)\n    request.onerror = () => reject(request.error)\n  })\n\nclass RandomAccessIDBFileVolume {\n  db: IDBDatabase\n  name: string\n  version: number\n  storeName: string\n  options: VolumeOptions\n  constructor(\n    db: IDBDatabase,\n    name: string,\n    version: number,\n    storeName: string,\n    options: VolumeOptions\n  ) {\n    this.db = db\n    this.name = name\n    this.version = version\n    this.storeName = storeName\n    this.options = options\n  }\n  store(): IDBObjectStore<string, IDBMutableFile> {\n    const { db, storeName } = this\n    const transaction = db.transaction([storeName], \"readwrite\")\n    return transaction.objectStore(storeName)\n  }\n  async delete(url) {\n    return await promise(this.store().delete(url))\n  }\n  async save(url, file) {\n    return await promise(this.store().put(file, url))\n  }\n  async open(url, mode) {\n    const file = await promise(this.store().get(url))\n    if (file) {\n      return file\n    } else if (mode === \"readwrite\") {\n      const file = await promise(\n        this.db.createMutableFile(url, \"binary/random\")\n      )\n      await this.save(url, file)\n      return file\n    } else {\n      throw new RangeError(`File ${url} does not exist`)\n    }\n  }\n\n  mount(file: string, options?: FileOptions) {\n    return new RandomAccessProvider(this, `/${file}`, options)\n  }\n}\n\ninterface VolumeOptions {\n  debug?: boolean;\n  name?: string;\n  version?: number;\n  storeName?: string;\n}\n\ninterface FileOptions {\n  truncate?: boolean;\n  size?: number;\n  readable?: boolean;\n  writable?: boolean;\n}\n\ninterface Size {\n  size: number;\n}\n\nclass RandomAccessProvider extends RandomAccess {\n  url: string\n  volume: RandomAccessIDBFileVolume\n  debug: boolean\n  file: ?IDBMutableFile\n  lockedFile: ?IDBFileHandle\n  mode: \"readonly\" | \"readwrite\"\n  workQueue: Request[]\n  isIdle: boolean\n  options: FileOptions\n\n  static async mount(options?: VolumeOptions = {}) {\n    if (!self.IDBMutableFile) {\n      throw Error(\n        `Runtime does not supports IDBMutableFile https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile`\n      )\n    } else {\n      const name = options.name || `RandomAccess`\n      const version = options.version || 1.0\n      const storeName = options.storeName || `IDBMutableFile`\n\n      const request = indexedDB.open(name, version)\n      request.onupgradeneeded = () => {\n        const db = request.result\n        if (!db.objectStoreNames.contains(storeName)) {\n          db.createObjectStore(storeName)\n        }\n      }\n      const db = await promise(request)\n      const volume = new RandomAccessIDBFileVolume(\n        db,\n        name,\n        version,\n        storeName,\n        options\n      )\n      return (path: string, options?: FileOptions) =>\n        volume.mount(path, options)\n    }\n  }\n  static async open(\n    self: RandomAccessProvider,\n    request: OpenRequest\n  ): Promise<void> {\n    const { options } = self\n    const mode = request.preferReadonly ? \"readonly\" : \"readwrite\"\n    self.debug && console.log(`>> open ${self.url} ${mode}`)\n\n    if (!self.file || (self.mode !== mode && mode === \"readwrite\")) {\n      self.mode = mode\n      self.file = await self.volume.open(self.url, mode)\n    }\n\n    if (!(mode === \"readonly\" || !options.truncate)) {\n      const file = self.activate()\n      await promise(file.truncate(options.size || 0))\n    }\n\n    self.debug && console.log(`<< open ${self.url} ${mode}`)\n  }\n  static async read(\n    self: RandomAccessProvider,\n    { data, offset, size }: ReadRequest\n  ): Promise<Buffer> {\n    self.debug && console.log(`>> read ${self.url} <${offset}, ${size}>`)\n    const buffer: Buffer = data || Buffer.allocUnsafe(size)\n    if (size === 0) {\n      return buffer\n    }\n\n    const file = self.activate()\n    file.location = offset\n    const chunk = await promise(file.readAsArrayBuffer(size))\n    if (chunk.byteLength !== size) {\n      throw new Error(\"Could not satisfy length\")\n    }\n\n    Buffer.from(chunk).copy(buffer)\n    self.debug &&\n      console.log(`<< read ${self.url} <${offset}, ${size}>`, buffer)\n    return buffer\n  }\n  static async write(\n    self: RandomAccessProvider,\n    { data, offset, size }: WriteRequest\n  ): Promise<void> {\n    self.debug && console.log(`>> write ${self.url} <${offset}, ${size}>`, data)\n    const { byteLength, byteOffset } = data\n    const chunk = byteLength === size ? data : data.slice(0, size)\n\n    const file = self.activate()\n    file.location = offset\n    const wrote = await promise(file.write(chunk))\n\n    self.debug && console.log(`<< write ${self.url} <${offset}, ${size}>`)\n\n    return wrote\n  }\n  static async delete(\n    self: RandomAccessProvider,\n    { offset, size }: DeleteRequest\n  ): Promise<void> {\n    self.debug && console.log(`>> delete ${self.url} <${offset}, ${size}>`)\n    const stat = await this.stat(self)\n    if (offset + size >= stat.size) {\n      const file = self.activate()\n      await promise(file.truncate(offset))\n    }\n\n    self.debug && console.log(`<< delete ${self.url} <${offset}, ${size}>`)\n  }\n  static async stat(self: RandomAccessProvider): Promise<Stat> {\n    self.debug && console.log(`>> stat ${self.url}`)\n    const file = self.activate()\n    const stat = await promise(file.getMetadata())\n    self.debug && console.log(`<< stat {size:${stat.size}} ${self.url} `)\n\n    return stat\n  }\n  static async close(self: RandomAccessProvider): Promise<void> {\n    self.debug && console.log(`>> close ${self.url}`)\n    const { lockedFile } = self\n    if (lockedFile && lockedFile.active) {\n      await promise(lockedFile.flush())\n    }\n    self.lockedFile = null\n    self.file = null\n    self.debug && console.log(`<< close ${self.url}`)\n  }\n  static async destroy(self: RandomAccessProvider): Promise<void> {\n    self.debug && console.log(`>> destroy ${self.url}`)\n    await self.volume.delete(self.url)\n    self.debug && console.log(`<< destroy ${self.url}`)\n  }\n\n  static async awake(self: RandomAccessProvider) {\n    const { workQueue } = self\n    self.isIdle = false\n    let index = 0\n    while (index < workQueue.length) {\n      const request = workQueue[index++]\n      await this.perform(self, request)\n    }\n    workQueue.length = 0\n    self.isIdle = true\n  }\n  static schedule(self: RandomAccessProvider, request: Request) {\n    self.workQueue.push(request)\n    if (self.isIdle) {\n      this.awake(self)\n    }\n  }\n  static async perform(self: RandomAccessProvider, request: Request) {\n    try {\n      switch (request.type) {\n        case RequestType.open: {\n          return request.callback(null, await this.open(self, request))\n        }\n        case RequestType.read: {\n          return request.callback(null, await this.read(self, request))\n        }\n        case RequestType.write: {\n          return request.callback(null, await this.write(self, request))\n        }\n        case RequestType.delete: {\n          return request.callback(null, await this.delete(self, request))\n        }\n        case RequestType.stat: {\n          return request.callback(null, await this.stat(self))\n        }\n        case RequestType.close: {\n          return request.callback(null, await this.close(self))\n        }\n        case RequestType.destroy: {\n          return request.callback(null, await this.destroy(self))\n        }\n      }\n    } catch (error) {\n      request.callback(error)\n    }\n  }\n  _open(request: OpenRequest) {\n    RandomAccessProvider.schedule(this, request)\n  }\n  _openReadonly(request: OpenRequest) {\n    RandomAccessProvider.schedule(this, request)\n  }\n  _write(request: WriteRequest) {\n    RandomAccessProvider.schedule(this, request)\n  }\n  _read(request: ReadRequest) {\n    RandomAccessProvider.schedule(this, request)\n  }\n  _del(request: DeleteRequest) {\n    RandomAccessProvider.schedule(this, request)\n  }\n  _stat(request: StatRequest) {\n    RandomAccessProvider.perform(this, request)\n  }\n  _close(request: CloseRequest) {\n    RandomAccessProvider.schedule(this, request)\n  }\n  _destroy(request: DestroyRequest) {\n    RandomAccessProvider.schedule(this, request)\n  }\n  constructor(\n    volume: RandomAccessIDBFileVolume,\n    url: string,\n    options?: FileOptions = {}\n  ) {\n    super()\n    this.volume = volume\n    this.url = url\n    this.options = options\n    this.mode = \"readonly\"\n    this.file = null\n    this.lockedFile = null\n\n    this.workQueue = []\n    this.isIdle = true\n    this.debug = !!volume.options.debug\n  }\n  activate(): IDBFileHandle {\n    const { lockedFile, file, mode } = this\n    if (lockedFile && lockedFile.active) {\n      return lockedFile\n    } else if (file) {\n      const lockedFile = file.open(mode)\n      this.lockedFile = lockedFile\n      return lockedFile\n    } else {\n      throw new RangeError(\n        `Unable to activate file, likely provider was destroyed`\n      )\n    }\n  }\n}\n\nconst RequestType = {\n  open: 0,\n  read: 1,\n  write: 2,\n  delete: 3,\n  stat: 4,\n  close: 5,\n  destroy: 6\n}\n\nexport default RandomAccessProvider\n"],"names":["Object","create","inherits","ctor","superCtor","super_","prototype","TempCtor","constructor","NOT_READABLE","defaultImpl","Error","NOT_WRITABLE","NOT_DELETABLE","NOT_STATABLE","NO_OPEN_READABLE","module","RandomAccess","opts","EventEmitter","call","_queued","_pending","_needsOpen","opened","closed","destroyed","openReadonly","_openReadonly","open","_open","read","_read","write","_write","del","_del","stat","_stat","close","_close","destroy","_destroy","preferReadonly","readable","writable","deletable","statable","events","cb","noop","process","nextTick","Request","offset","size","run","data","length","req","push","_run","self","type","storage","_sync","_callback","_openError","_maybeOpenError","err","queued","i","_unqueue","ra","emit","shift","callback","val","_openAndNotClosed","queueAndRun","openWritable","overridable","nextTickCallback","indexedDB","window","promise","request","Promise","resolve","reject","onsuccess","result","onerror","error","RandomAccessIDBFileVolume","db","name","version","storeName","options","transaction","objectStore","url","store","delete","file","put","mode","get","createMutableFile","save","RangeError","RandomAccessProvider","schedule","perform","IDBMutableFile","onupgradeneeded","objectStoreNames","contains","createObjectStore","volume","path","mount","debug","console","log","truncate","activate","buffer","Buffer","allocUnsafe","location","readAsArrayBuffer","chunk","byteLength","from","copy","byteOffset","slice","wrote","getMetadata","lockedFile","active","flush","workQueue","isIdle","index","awake","RequestType"],"mappings":";;;;;;;;;;;;;CAAA,IAAI,OAAOA,OAAOC,MAAd,KAAyB,UAA7B,EAAyC;iBAEvC,GAAiB,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;UAC7CC,MAAL,GAAcD,SAAd;UACKE,SAAL,GAAiBN,OAAOC,MAAP,CAAcG,UAAUE,SAAxB,EAAmC;oBACrC;gBACJH,IADI;qBAEC,KAFD;mBAGD,IAHC;uBAIG;;MALD,CAAjB;IAFF;EAFF,MAaO;iBAEL,GAAiB,SAASD,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;UAC7CC,MAAL,GAAcD,SAAd;SACIG,WAAW,SAAXA,QAAW,GAAY,EAA3B;cACSD,SAAT,GAAqBF,UAAUE,SAA/B;UACKA,SAAL,GAAiB,IAAIC,QAAJ,EAAjB;UACKD,SAAL,CAAeE,WAAf,GAA6BL,IAA7B;IALF;;;;CCZF,IAAIM,eAAeC,YAAY,IAAIC,KAAJ,CAAU,cAAV,CAAZ,CAAnB;CACA,IAAIC,eAAeF,YAAY,IAAIC,KAAJ,CAAU,cAAV,CAAZ,CAAnB;CACA,IAAIE,gBAAgBH,YAAY,IAAIC,KAAJ,CAAU,eAAV,CAAZ,CAApB;CACA,IAAIG,eAAeJ,YAAY,IAAIC,KAAJ,CAAU,cAAV,CAAZ,CAAnB;CACA,IAAII,mBAAmBL,YAAY,IAAIC,KAAJ,CAAU,kBAAV,CAAZ,CAAvB;;CAEAK,uBAAA,GAAiBC,YAAjB;;CAEA,SAASA,YAAT,CAAuBC,IAAvB,EAA6B;OACvB,EAAE,gBAAgBD,YAAlB,CAAJ,EAAqC,OAAO,IAAIA,YAAJ,CAAiBC,IAAjB,CAAP;UAC9BC,YAAP,CAAoBC,IAApB,CAAyB,IAAzB;;QAEKC,OAAL,GAAe,EAAf;QACKC,QAAL,GAAgB,CAAhB;QACKC,UAAL,GAAkB,IAAlB;;QAEKC,MAAL,GAAc,KAAd;QACKC,MAAL,GAAc,KAAd;QACKC,SAAL,GAAiB,KAAjB;;OAEIR,IAAJ,EAAU;SACJA,KAAKS,YAAT,EAAuB,KAAKC,aAAL,GAAqBV,KAAKS,YAA1B;SACnBT,KAAKW,IAAT,EAAe,KAAKC,KAAL,GAAaZ,KAAKW,IAAlB;SACXX,KAAKa,IAAT,EAAe,KAAKC,KAAL,GAAad,KAAKa,IAAlB;SACXb,KAAKe,KAAT,EAAgB,KAAKC,MAAL,GAAchB,KAAKe,KAAnB;SACZf,KAAKiB,GAAT,EAAc,KAAKC,IAAL,GAAYlB,KAAKiB,GAAjB;SACVjB,KAAKmB,IAAT,EAAe,KAAKC,KAAL,GAAapB,KAAKmB,IAAlB;SACXnB,KAAKqB,KAAT,EAAgB,KAAKC,MAAL,GAActB,KAAKqB,KAAnB;SACZrB,KAAKuB,OAAT,EAAkB,KAAKC,QAAL,GAAgBxB,KAAKuB,OAArB;;;QAGfE,cAAL,GAAsB,KAAKf,aAAL,KAAuBb,gBAA7C;QACK6B,QAAL,GAAgB,KAAKZ,KAAL,KAAevB,YAA/B;QACKoC,QAAL,GAAgB,KAAKX,MAAL,KAAgBtB,YAAhC;QACKkC,SAAL,GAAiB,KAAKV,IAAL,KAAcvB,aAA/B;QACKkC,QAAL,GAAgB,KAAKT,KAAL,KAAexB,YAA/B;;;AAGFZ,kBAASe,YAAT,EAAuB+B,OAAO7B,YAA9B;;CAEAF,aAAaX,SAAb,CAAuBuB,IAAvB,GAA8B,UAAUoB,EAAV,EAAc;OACtC,CAACA,EAAL,EAASA,KAAKC,IAAL;OACL,KAAK1B,MAAL,IAAe,CAAC,KAAKD,UAAzB,EAAqC,OAAO4B,QAAQC,QAAR,CAAiBH,EAAjB,EAAqB,IAArB,CAAP;eACzB,IAAZ,EAAkB,IAAII,OAAJ,CAAY,IAAZ,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiCJ,EAAjC,CAAlB;EAHF;;CAMAhC,aAAaX,SAAb,CAAuBwB,KAAvB,GAA+BpB,YAAY,IAAZ,CAA/B;CACAO,aAAaX,SAAb,CAAuBsB,aAAvB,GAAuCb,gBAAvC;;CAEAE,aAAaX,SAAb,CAAuByB,IAAvB,GAA8B,UAAUuB,MAAV,EAAkBC,IAAlB,EAAwBN,EAAxB,EAA4B;QACnDO,GAAL,CAAS,IAAIH,OAAJ,CAAY,IAAZ,EAAkB,CAAlB,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmC,IAAnC,EAAyCN,EAAzC,CAAT;EADF;;CAIAhC,aAAaX,SAAb,CAAuB0B,KAAvB,GAA+BvB,YAA/B;;CAEAQ,aAAaX,SAAb,CAAuB2B,KAAvB,GAA+B,UAAUqB,MAAV,EAAkBG,IAAlB,EAAwBR,EAAxB,EAA4B;OACrD,CAACA,EAAL,EAASA,KAAKC,IAAL;gBACI,IAAb;QACKM,GAAL,CAAS,IAAIH,OAAJ,CAAY,IAAZ,EAAkB,CAAlB,EAAqBC,MAArB,EAA6BG,KAAKC,MAAlC,EAA0CD,IAA1C,EAAgDR,EAAhD,CAAT;EAHF;;CAMAhC,aAAaX,SAAb,CAAuB4B,MAAvB,GAAgCtB,YAAhC;;CAEAK,aAAaX,SAAb,CAAuB6B,GAAvB,GAA6B,UAAUmB,MAAV,EAAkBC,IAAlB,EAAwBN,EAAxB,EAA4B;OACnD,CAACA,EAAL,EAASA,KAAKC,IAAL;gBACI,IAAb;QACKM,GAAL,CAAS,IAAIH,OAAJ,CAAY,IAAZ,EAAkB,CAAlB,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmC,IAAnC,EAAyCN,EAAzC,CAAT;EAHF;;CAMAhC,aAAaX,SAAb,CAAuB8B,IAAvB,GAA8BvB,aAA9B;;CAEAI,aAAaX,SAAb,CAAuB+B,IAAvB,GAA8B,UAAUY,EAAV,EAAc;QACrCO,GAAL,CAAS,IAAIH,OAAJ,CAAY,IAAZ,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiCJ,EAAjC,CAAT;EADF;;CAIAhC,aAAaX,SAAb,CAAuBgC,KAAvB,GAA+BxB,YAA/B;;CAEAG,aAAaX,SAAb,CAAuBiC,KAAvB,GAA+B,UAAUU,EAAV,EAAc;OACvC,CAACA,EAAL,EAASA,KAAKC,IAAL;OACL,KAAKzB,MAAT,EAAiB,OAAO0B,QAAQC,QAAR,CAAiBH,EAAjB,EAAqB,IAArB,CAAP;eACL,IAAZ,EAAkB,IAAII,OAAJ,CAAY,IAAZ,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiCJ,EAAjC,CAAlB;EAHF;;CAMAhC,aAAaX,SAAb,CAAuBkC,MAAvB,GAAgC9B,YAAY,IAAZ,CAAhC;;CAEAO,aAAaX,SAAb,CAAuBmC,OAAvB,GAAiC,UAAUQ,EAAV,EAAc;OACzC,CAACA,EAAL,EAASA,KAAKC,IAAL;OACL,CAAC,KAAKzB,MAAV,EAAkB,KAAKc,KAAL,CAAWW,IAAX;eACN,IAAZ,EAAkB,IAAIG,OAAJ,CAAY,IAAZ,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiCJ,EAAjC,CAAlB;EAHF;;CAMAhC,aAAaX,SAAb,CAAuBoC,QAAvB,GAAkChC,YAAY,IAAZ,CAAlC;;CAEAO,aAAaX,SAAb,CAAuBkD,GAAvB,GAA6B,UAAUG,GAAV,EAAe;OACtC,KAAKpC,UAAT,EAAqB,KAAKM,IAAL,CAAUqB,IAAV;OACjB,KAAK7B,OAAL,CAAaqC,MAAjB,EAAyB,KAAKrC,OAAL,CAAauC,IAAb,CAAkBD,GAAlB,EAAzB,KACKA,IAAIE,IAAJ;EAHP;;CAMA,SAASX,IAAT,GAAiB;;CAEjB,SAASG,OAAT,CAAkBS,IAAlB,EAAwBC,IAAxB,EAA8BT,MAA9B,EAAsCC,IAAtC,EAA4CE,IAA5C,EAAkDR,EAAlD,EAAsD;QAC/Cc,IAAL,GAAYA,IAAZ;QACKT,MAAL,GAAcA,MAAd;QACKG,IAAL,GAAYA,IAAZ;QACKF,IAAL,GAAYA,IAAZ;QACKS,OAAL,GAAeF,IAAf;;QAEKG,KAAL,GAAa,KAAb;QACKC,SAAL,GAAiBjB,EAAjB;QACKkB,UAAL,GAAkB,IAAlB;;;CAGFd,QAAQ/C,SAAR,CAAkB8D,eAAlB,GAAoC,UAAUC,GAAV,EAAe;OAC7C,KAAKN,IAAL,KAAc,CAAlB,EAAqB;OACjBO,SAAS,KAAKN,OAAL,CAAa3C,OAA1B;QACK,IAAIkD,IAAI,CAAb,EAAgBA,IAAID,OAAOZ,MAA3B,EAAmCa,GAAnC;YAA+CA,CAAP,EAAUJ,UAAV,GAAuBE,GAAvB;;EAH1C;;CAMAhB,QAAQ/C,SAAR,CAAkBkE,QAAlB,GAA6B,UAAUH,GAAV,EAAe;OACtCI,KAAK,KAAKT,OAAd;OACIM,SAASG,GAAGpD,OAAhB;;OAEI,CAACgD,GAAL,EAAU;aACA,KAAKN,IAAb;YACO,CAAL;aACM,CAACU,GAAGjD,MAAR,EAAgB;cACXA,MAAH,GAAY,IAAZ;cACGkD,IAAH,CAAQ,MAAR;;;;YAIC,CAAL;aACM,CAACD,GAAGhD,MAAR,EAAgB;cACXA,MAAH,GAAY,IAAZ;cACGiD,IAAH,CAAQ,OAAR;;;;YAIC,CAAL;aACM,CAACD,GAAG/C,SAAR,EAAmB;cACdA,SAAH,GAAe,IAAf;cACGgD,IAAH,CAAQ,SAAR;;;;IAnBR,MAuBO;UACAN,eAAL,CAAqBC,GAArB;;;OAGEC,OAAOZ,MAAP,IAAiBY,OAAO,CAAP,MAAc,IAAnC,EAAyCA,OAAOK,KAAP;OACrC,IAAGF,GAAGnD,QAAN,IAAkBgD,OAAOZ,MAA7B,EAAqCY,OAAO,CAAP,EAAUT,IAAV;EAhCvC;;CAmCAR,QAAQ/C,SAAR,CAAkBsE,QAAlB,GAA6B,UAAUP,GAAV,EAAeQ,GAAf,EAAoB;OAC3C,KAAKZ,KAAT,EAAgB,OAAOb,SAAS,IAAT,EAAeiB,GAAf,EAAoBQ,GAApB,CAAP;QACXL,QAAL,CAAcH,GAAd;QACKH,SAAL,CAAeG,GAAf,EAAoBQ,GAApB;EAHF;;CAMAxB,QAAQ/C,SAAR,CAAkBwE,iBAAlB,GAAsC,YAAY;OAC5CL,KAAK,KAAKT,OAAd;OACIS,GAAGjD,MAAH,IAAa,CAACiD,GAAGhD,MAArB,EAA6B,OAAO,IAAP;OACzB,CAACgD,GAAGjD,MAAR,EAAgB4B,SAAS,IAAT,EAAe,KAAKe,UAAL,IAAmB,IAAIxD,KAAJ,CAAU,YAAV,CAAlC,EAAhB,KACK,IAAI8D,GAAGhD,MAAP,EAAe2B,SAAS,IAAT,EAAe,IAAIzC,KAAJ,CAAU,QAAV,CAAf;UACb,KAAP;EALF;;CAQA0C,QAAQ/C,SAAR,CAAkBwB,KAAlB,GAA0B,YAAY;OAChC2C,KAAK,KAAKT,OAAd;;OAEIS,GAAGjD,MAAH,IAAa,CAACiD,GAAGlD,UAArB,EAAiC,OAAO6B,SAAS,IAAT,EAAe,IAAf,CAAP;OAC7BqB,GAAGhD,MAAP,EAAe,OAAO2B,SAAS,IAAT,EAAe,IAAIzC,KAAJ,CAAU,QAAV,CAAf,CAAP;;MAEZY,UAAH,GAAgB,KAAhB;OACIkD,GAAG9B,cAAP,EAAuB8B,GAAG7C,aAAH,CAAiB,IAAjB,EAAvB,KACK6C,GAAG3C,KAAH,CAAS,IAAT;EARP;;CAWAuB,QAAQ/C,SAAR,CAAkBuD,IAAlB,GAAyB,YAAY;OAC/BY,KAAK,KAAKT,OAAd;MACG1C,QAAH;;QAEK2C,KAAL,GAAa,IAAb;;WAEQ,KAAKF,IAAb;UACO,CAAL;YACOjC,KAAL;;;UAGG,CAAL;WACM,KAAKgD,iBAAL,EAAJ,EAA8BL,GAAGzC,KAAH,CAAS,IAAT;;;UAG3B,CAAL;WACM,KAAK8C,iBAAL,EAAJ,EAA8BL,GAAGvC,MAAH,CAAU,IAAV;;;UAG3B,CAAL;WACM,KAAK4C,iBAAL,EAAJ,EAA8BL,GAAGrC,IAAH,CAAQ,IAAR;;;UAG3B,CAAL;WACM,KAAK0C,iBAAL,EAAJ,EAA8BL,GAAGnC,KAAH,CAAS,IAAT;;;UAG3B,CAAL;WACMmC,GAAGhD,MAAH,IAAa,CAACgD,GAAGjD,MAArB,EAA6B4B,SAAS,IAAT,EAAe,IAAf,EAA7B,KACKqB,GAAGjC,MAAH,CAAU,IAAV;;;UAGF,CAAL;WACMiC,GAAG/C,SAAP,EAAkB0B,SAAS,IAAT,EAAe,IAAf,EAAlB,KACKqB,GAAG/B,QAAH,CAAY,IAAZ;;;;QAIJuB,KAAL,GAAa,KAAb;EAtCF;;CAyCA,SAASc,WAAT,CAAsBjB,IAAtB,EAA4BH,GAA5B,EAAiC;QAC1BtC,OAAL,CAAauC,IAAb,CAAkBD,GAAlB;OACI,CAACG,KAAKxC,QAAV,EAAoBqC,IAAIE,IAAJ;;;CAGtB,SAASmB,YAAT,CAAuBlB,IAAvB,EAA6B;OACvBA,KAAKnB,cAAT,EAAyB;UAClBpB,UAAL,GAAkB,IAAlB;UACKoB,cAAL,GAAsB,KAAtB;;;;CAIJ,SAASjC,WAAT,CAAsB2D,GAAtB,EAA2B;UAClBY,WAAP;;YAESA,WAAT,CAAsBtB,GAAtB,EAA2B;cAChBA,GAAT,EAAcU,GAAd;;;;CAIJ,SAASjB,QAAT,CAAmBO,GAAnB,EAAwBU,GAAxB,EAA6BQ,GAA7B,EAAkC;WACxBzB,QAAR,CAAiB8B,gBAAjB,EAAmCvB,GAAnC,EAAwCU,GAAxC,EAA6CQ,GAA7C;;;CAGF,SAASK,gBAAT,CAA2BvB,GAA3B,EAAgCU,GAAhC,EAAqCQ,GAArC,EAA0C;OACpCD,QAAJ,CAAaP,GAAb,EAAkBQ,GAAlB;;;CCnEK,IAAMM,YAAwBC,OAAOD,SAArC;;;;;;;;;;;;CC7JP,IAAME,UAAuB,SAAvBA,OAAuB,CAACC,OAAD;CAAA,SAC3B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;CAC/BH,YAAQI,SAAR,GAAoB;CAAA,aAAMF,QAAQF,QAAQK,MAAhB,CAAN;CAAA,KAApB;CACAL,YAAQM,OAAR,GAAkB;CAAA,aAAMH,OAAOH,QAAQO,KAAf,CAAN;CAAA,KAAlB;CACD,GAHD,CAD2B;CAAA,CAA7B;;KAMMC;CAMJ,qCACEC,EADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,SAJF,EAKEC,OALF,EAME;CAAA;;CACA,SAAKJ,EAAL,GAAUA,EAAV;CACA,SAAKC,IAAL,GAAYA,IAAZ;CACA,SAAKC,OAAL,GAAeA,OAAf;CACA,SAAKC,SAAL,GAAiBA,SAAjB;CACA,SAAKC,OAAL,GAAeA,OAAf;CACD;;;;6BAC+C;CAAA,UACtCJ,EADsC,GACpB,IADoB,CACtCA,EADsC;CAAA,UAClCG,SADkC,GACpB,IADoB,CAClCA,SADkC;;CAE9C,UAAME,cAAcL,GAAGK,WAAH,CAAe,CAACF,SAAD,CAAf,EAA4B,WAA5B,CAApB;CACA,aAAOE,YAAYC,WAAZ,CAAwBH,SAAxB,CAAP;CACD;;;;6EACYI;;;;;;wBACEjB,QAAQ,KAAKkB,KAAL,GAAaC,MAAb,CAAoBF,GAApB,CAAR;;;;;;;;;;;;;;;;;;;;;;+EAEJA,KAAKG;;;;;;wBACDpB,QAAQ,KAAKkB,KAAL,GAAaG,GAAb,CAAiBD,IAAjB,EAAuBH,GAAvB,CAAR;;;;;;;;;;;;;;;;;;;;;;+EAEJA,KAAKK;;;;;;;;wBACKtB,QAAQ,KAAKkB,KAAL,GAAaK,GAAb,CAAiBN,GAAjB,CAAR;;;CAAbG;;sBACFA;;;;;mDACKA;;;uBACEE,SAAS;;;;;;wBACCtB,QACjB,KAAKU,EAAL,CAAQc,iBAAR,CAA0BP,GAA1B,EAA+B,eAA/B,CADiB;;;CAAbG;;wBAGA,KAAKK,IAAL,CAAUR,GAAV,EAAeG,KAAf;;;mDACCA;;;uBAED,IAAIM,UAAJ,WAAuBT,GAAvB;;;;;;;;;;;;;;;;;;2BAIJG,MAAcN,SAAuB;CACzC,aAAO,IAAIa,oBAAJ,CAAyB,IAAzB,QAAmCP,IAAnC,EAA2CN,OAA3C,CAAP;CACD;;;;;;KAqBGa;;;;;2BAqLE1B,SAAsB;CAC1B0B,2BAAqBC,QAArB,CAA8B,IAA9B,EAAoC3B,OAApC;CACD;;;mCACaA,SAAsB;CAClC0B,2BAAqBC,QAArB,CAA8B,IAA9B,EAAoC3B,OAApC;CACD;;;4BACMA,SAAuB;CAC5B0B,2BAAqBC,QAArB,CAA8B,IAA9B,EAAoC3B,OAApC;CACD;;;2BACKA,SAAsB;CAC1B0B,2BAAqBC,QAArB,CAA8B,IAA9B,EAAoC3B,OAApC;CACD;;;0BACIA,SAAwB;CAC3B0B,2BAAqBC,QAArB,CAA8B,IAA9B,EAAoC3B,OAApC;CACD;;;2BACKA,SAAsB;CAC1B0B,2BAAqBE,OAArB,CAA6B,IAA7B,EAAmC5B,OAAnC;CACD;;;4BACMA,SAAuB;CAC5B0B,2BAAqBC,QAArB,CAA8B,IAA9B,EAAoC3B,OAApC;CACD;;;8BACQA,SAAyB;CAChC0B,2BAAqBC,QAArB,CAA8B,IAA9B,EAAoC3B,OAApC;CACD;;;;;aAjMkBa,8EAA0B;;;;;;;;qBACtCrC,KAAKqD;;;;;uBACFxG;;;CAIAqF,wBAAOG,QAAQH,IAAR;CACPC,2BAAUE,QAAQF,OAAR,IAAmB;CAC7BC,6BAAYC,QAAQD,SAAR;CAEZZ,0BAAUH,UAAUtD,IAAV,CAAemE,KAAf,EAAqBC,QAArB;;CAChBX,wBAAQ8B,eAAR,GAA0B,YAAM;CAC9B,sBAAMrB,KAAKT,QAAQK,MAAnB;CACA,sBAAI,CAACI,GAAGsB,gBAAH,CAAoBC,QAApB,CAA6BpB,UAA7B,CAAL,EAA8C;CAC5CH,uBAAGwB,iBAAH,CAAqBrB,UAArB;CACD;CACF,iBALD;;wBAMiBb,QAAQC,OAAR;;;CAAXS;CACAyB,yBAAS,IAAI1B,yBAAJ,CACbC,EADa,EAEbC,KAFa,EAGbC,QAHa,EAIbC,UAJa,EAKbC,OALa;mDAOR,UAACsB,IAAD,EAAetB,OAAf;CAAA,yBACLqB,OAAOE,KAAP,CAAaD,IAAb,EAAmBtB,OAAnB,CADK;CAAA;;;;;;;;;;;;;;;;;;;+EAKTrC,MACAwB;;;;;;CAEQa,0BAAYrC,KAAZqC;CACFQ,uBAAOrB,QAAQ3C,cAAR,GAAyB,UAAzB,GAAsC;;CACnDmB,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,cAAuB/D,KAAKwC,GAA5B,SAAmCK,IAAnC,CAAd;;uBAEI,CAAC7C,KAAK2C,IAAN,IAAe3C,KAAK6C,IAAL,KAAcA,IAAd,IAAsBA,SAAS;;;;;CAChD7C,qBAAK6C,IAAL,GAAYA,IAAZ;;wBACkB7C,KAAK0D,MAAL,CAAY3F,IAAZ,CAAiBiC,KAAKwC,GAAtB,EAA2BK,IAA3B;;;CAAlB7C,qBAAK2C;;;qBAGDE,SAAS,UAAT,IAAuB,CAACR,QAAQ2B;;;;;CAC9BrB,uBAAO3C,KAAKiE,QAAL;;wBACP1C,QAAQoB,KAAKqB,QAAL,CAAc3B,QAAQ5C,IAAR,IAAgB,CAA9B,CAAR;;;;CAGRO,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,cAAuB/D,KAAKwC,GAA5B,SAAmCK,IAAnC,CAAd;;;;;;;;;;;;;;;;;;;+EAGA7C;aACEL,aAAAA;aAAMH,eAAAA;aAAQC,aAAAA;;;;;;CAEhBO,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,cAAuB/D,KAAKwC,GAA5B,UAAoChD,MAApC,UAA+CC,IAA/C,OAAd;CACMyE,4BAAiBvE,QAAQwE,cAAOC,WAAP,CAAmB3E,IAAnB;;uBAC3BA,SAAS;;;;;mDACJyE;;;CAGHvB,uBAAO3C,KAAKiE,QAAL;;CACbtB,qBAAK0B,QAAL,GAAgB7E,MAAhB;;wBACoB+B,QAAQoB,KAAK2B,iBAAL,CAAuB7E,IAAvB,CAAR;;;CAAd8E;;uBACFA,MAAMC,UAAN,KAAqB/E;;;;;uBACjB,IAAI5C,KAAJ,CAAU,0BAAV;;;;CAGRsH,8BAAOM,IAAP,CAAYF,KAAZ,EAAmBG,IAAnB,CAAwBR,SAAxB;CACAlE,qBAAK6D,KAAL,IACEC,QAAQC,GAAR,cAAuB/D,KAAKwC,GAA5B,UAAoChD,MAApC,UAA+CC,IAA/C,QAAwDyE,SAAxD,CADF;mDAEOA;;;;;;;;;;;;;;;;;;;+EAGPlE;aACEL,aAAAA;aAAMH,eAAAA;aAAQC,aAAAA;;;;;;CAEhBO,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,eAAwB/D,KAAKwC,GAA7B,UAAqChD,MAArC,UAAgDC,IAAhD,QAAyDE,IAAzD,CAAd;CACQ6E,6BAA2B7E,KAA3B6E,YAAYG,aAAehF,KAAfgF;CACdJ,wBAAQC,eAAe/E,IAAf,GAAsBE,IAAtB,GAA6BA,KAAKiF,KAAL,CAAW,CAAX,EAAcnF,IAAd;CAErCkD,uBAAO3C,KAAKiE,QAAL;;CACbtB,qBAAK0B,QAAL,GAAgB7E,MAAhB;;wBACoB+B,QAAQoB,KAAKxE,KAAL,CAAWoG,KAAX,CAAR;;;CAAdM;;;CAEN7E,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,eAAwB/D,KAAKwC,GAA7B,UAAqChD,MAArC,UAAgDC,IAAhD,OAAd;;mDAEOoF;;;;;;;;;;;;;;;;;;;gFAGP7E;aACER,gBAAAA;aAAQC,cAAAA;;;;;;CAEVO,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,gBAAyB/D,KAAKwC,GAA9B,UAAsChD,MAAtC,UAAiDC,IAAjD,OAAd;;wBACmB,KAAKlB,IAAL,CAAUyB,IAAV;;;CAAbzB;;uBACFiB,SAASC,IAAT,IAAiBlB,KAAKkB;;;;;CAClBkD,uBAAO3C,KAAKiE,QAAL;;wBACP1C,QAAQoB,KAAKqB,QAAL,CAAcxE,MAAd,CAAR;;;;CAGRQ,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,gBAAyB/D,KAAKwC,GAA9B,UAAsChD,MAAtC,UAAiDC,IAAjD,OAAd;;;;;;;;;;;;;;;;;;;gFAEgBO;;;;;;CAChBA,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,cAAuB/D,KAAKwC,GAA5B,CAAd;CACMG,uBAAO3C,KAAKiE,QAAL;;wBACM1C,QAAQoB,KAAKmC,WAAL,EAAR;;;CAAbvG;;CACNyB,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,oBAA6BxF,KAAKkB,IAAlC,UAA2CO,KAAKwC,GAAhD,OAAd;;mDAEOjE;;;;;;;;;;;;;;;;;;;iFAEUyB;;;;;;CACjBA,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,eAAwB/D,KAAKwC,GAA7B,CAAd;CACQuC,6BAAe/E,KAAf+E;;uBACJA,cAAcA,WAAWC;;;;;;wBACrBzD,QAAQwD,WAAWE,KAAX,EAAR;;;CAERjF,qBAAK+E,UAAL,GAAkB,IAAlB;CACA/E,qBAAK2C,IAAL,GAAY,IAAZ;CACA3C,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,eAAwB/D,KAAKwC,GAA7B,CAAd;;;;;;;;;;;;;;;;;;;iFAEmBxC;;;;;CACnBA,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,iBAA0B/D,KAAKwC,GAA/B,CAAd;;wBACMxC,KAAK0D,MAAL,CAAYhB,MAAZ,CAAmB1C,KAAKwC,GAAxB;;;CACNxC,qBAAK6D,KAAL,IAAcC,QAAQC,GAAR,iBAA0B/D,KAAKwC,GAA/B,CAAd;;;;;;;;;;;;;;;;;;;iFAGiBxC;;;;;;CACTkF,4BAAclF,KAAdkF;;CACRlF,qBAAKmF,MAAL,GAAc,KAAd;CACIC,wBAAQ;;;uBACLA,QAAQF,UAAUtF;;;;;CACjB4B,0BAAU0D,UAAUE,OAAV;;wBACV,KAAKhC,OAAL,CAAapD,IAAb,EAAmBwB,OAAnB;;;;;;;CAER0D,0BAAUtF,MAAV,GAAmB,CAAnB;CACAI,qBAAKmF,MAAL,GAAc,IAAd;;;;;;;;;;;;;;;;;;8BAEcnF,MAA4BwB,SAAkB;CAC5DxB,WAAKkF,SAAL,CAAepF,IAAf,CAAoB0B,OAApB;CACA,UAAIxB,KAAKmF,MAAT,EAAiB;CACf,aAAKE,KAAL,CAAWrF,IAAX;CACD;CACF;;;;iFACoBA,MAA4BwB;;;;;;iCAErCA,QAAQvB;qDACTqF,YAAYvH,6BAGZuH,YAAYrH,6BAGZqH,YAAYnH,+BAGZmH,YAAY5C,gCAGZ4C,YAAY/G,8BAGZ+G,YAAY7G,+BAGZ6G,YAAY3G;;;;iCAjBR6C;;wBAA6B,KAAKzD,IAAL,CAAUiC,IAAV,EAAgBwB,OAAhB;;;;kEAArBV,6BAAS;;;iCAGjBU;;wBAA6B,KAAKvD,IAAL,CAAU+B,IAAV,EAAgBwB,OAAhB;;;;kEAArBV,6BAAS;;;iCAGjBU;;wBAA6B,KAAKrD,KAAL,CAAW6B,IAAX,EAAiBwB,OAAjB;;;;kEAArBV,6BAAS;;;iCAGjBU;;wBAA6B,KAAKkB,MAAL,CAAY1C,IAAZ,EAAkBwB,OAAlB;;;;kEAArBV,6BAAS;;;iCAGjBU;;wBAA6B,KAAKjD,IAAL,CAAUyB,IAAV;;;;kEAArBc,6BAAS;;;kCAGjBU;;wBAA6B,KAAK/C,KAAL,CAAWuB,IAAX;;;;mEAArBc,8BAAS;;;kCAGjBU;;wBAA6B,KAAK7C,OAAL,CAAaqB,IAAb;;;;mEAArBc,8BAAS;;;;;;;;;;CAI5BU,wBAAQV,QAAR;;;;;;;;;;;;;;;;;;CA2BJ,gCACE4C,MADF,EAEElB,GAFF,EAIE;CAAA,QADAH,OACA,uEADwB,EACxB;;CAAA;;CAAA;;CAEA,UAAKqB,MAAL,GAAcA,MAAd;CACA,UAAKlB,GAAL,GAAWA,GAAX;CACA,UAAKH,OAAL,GAAeA,OAAf;CACA,UAAKQ,IAAL,GAAY,UAAZ;CACA,UAAKF,IAAL,GAAY,IAAZ;CACA,UAAKoC,UAAL,GAAkB,IAAlB;;CAEA,UAAKG,SAAL,GAAiB,EAAjB;CACA,UAAKC,MAAL,GAAc,IAAd;CACA,UAAKtB,KAAL,GAAa,CAAC,CAACH,OAAOrB,OAAP,CAAewB,KAA9B;CAXA;CAYD;;;;gCACyB;CAAA,UAChBkB,UADgB,GACW,IADX,CAChBA,UADgB;CAAA,UACJpC,IADI,GACW,IADX,CACJA,IADI;CAAA,UACEE,IADF,GACW,IADX,CACEA,IADF;;CAExB,UAAIkC,cAAcA,WAAWC,MAA7B,EAAqC;CACnC,eAAOD,UAAP;CACD,OAFD,MAEO,IAAIpC,IAAJ,EAAU;CACf,YAAMoC,cAAapC,KAAK5E,IAAL,CAAU8E,IAAV,CAAnB;CACA,aAAKkC,UAAL,GAAkBA,WAAlB;CACA,eAAOA,WAAP;CACD,OAJM,MAIA;CACL,cAAM,IAAI9B,UAAJ,0DAAN;CAGD;CACF;;;;GA3OgC9F;;CA8OnC,IAAMmI,cAAc;CAClBvH,QAAM,CADY;CAElBE,QAAM,CAFY;CAGlBE,SAAO,CAHW;CAIlBuE,UAAQ,CAJU;CAKlBnE,QAAM,CALY;CAMlBE,SAAO,CANW;CAOlBE,WAAS;CAPS,CAApB;;;;;;;;;"}